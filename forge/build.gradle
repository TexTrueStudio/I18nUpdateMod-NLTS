plugins {
    id "dev.architectury.loom" version "1.0-SNAPSHOT"
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "i18n.mixins.json"
        ]
        dataGen {
            mod project.mod_id
        }
    }
}

repositories {
    maven { url "https://maven.blamejared.com" }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"

    modApi "me.shedaniel.cloth:cloth-config-forge:6.4.90"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}
